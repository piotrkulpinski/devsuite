@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "Geist";
  font-style: normal;
  font-weight: 400 700;
  src: url("/fonts/Geist-Variable.woff2") format("woff2");
}

:root {
  --header-height: 3.125rem;
  --header-top: 0.5rem;

  --color-background: 0 0% 100%;
  --color-foreground: 0 0% 15%;
  --color-accent: 217 91% 60%;
}

.dark {
  --color-background: 233 100% 4%;
  --color-foreground: 0 0% 95%;
  /* hsl(60, 100%, 99%) */
  --color-accent: 217 91% 60%;
}

@media (min-width: 768px) {
  :root {
    --header-top: 1rem;
  }
}

/* CSS */
:root {
  font-feature-settings:
    "ss01" on, /* Alternate R */
    "ss02" on, /* Alternate Y and y */
    "ss03" on, /* Alernative Q, Ø, and ø */
    "ss04" off, /* Alernative a */
    "ss05" on, /* Alernative 1, 2, and 4 */
    "ss06" on, /* Alternate !, ?, and * */
    "ss07" on, /* Round punctuation */
    "ss08" off; /* Alternate arrows */
}

@layer utilities {
  .animate-reveal {
    animation-timeline: view();
    animation-range-start: cover;
    animation-range-end: 10%;
  }

  .stars {
    overflow: hidden;
    mask-image: radial-gradient(circle, black, transparent 80%);
    pointer-events: none;
    user-select: none;
  }

  .stars::before {
    content: "";
    position: absolute;
    inset: 0px;
    background: radial-gradient(circle at bottom center, hsl(var(--color-accent)), transparent 70%);
    opacity: 0.4;
  }

  /* .stars::after {
    content: "";
    position: absolute;
    background: hsl(var(--color-background));
    width: 250%;
    left: -75%;
    aspect-ratio: 1 / 0.7;
    border-radius: 50%;
    outline: 1px solid hsl(242 41% 62% / 0.25);
    top: 50%;
  } */

  .stars svg {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    mask-image: radial-gradient(circle at center bottom, black, transparent);
  }
}

a,
button,
label[for],
[href] [class*="group-hover"] {
  @apply transition;
  @apply ease-out;
  @apply duration-200;
  @apply cursor-pointer;
}

svg:not([class*="stroke"]) {
  @apply !stroke-[1.75];
}

svg.lucide:not([class*="size-"]):not([class*="h-"]) {
  @apply size-[1em];
}
